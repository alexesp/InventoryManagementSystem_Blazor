@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

<PageTitle>Test page</PageTitle>

<table class="table">
	<thead>
		<tr>
			<th>Nombre</th>
			<th>Cantidad</th>
			<th>Precio</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@if (inventories is not null && inventories.Count > 0)
		{
			foreach (var inv in inventories)
			{
				<tr>
					<td>@inv.InventoryName</td>
					<td>@inv.Quantity</td>
					<td>@inv.Price</td>
					<td>
						<button 
							type="button"
							class="btn btn-light">
							Editar
						</button>
					</td>
				</tr>
			}
		}
	</tbody>
</table>

@code {
	private List<Inventory>? inventories;

	protected override async Task OnInitializedAsync()
	{
		//return base.OnInitializedAsync();

		inventories = (await ViewInventoriesByNameUseCase.ExecuteAsync()).ToList();
	}
}



